@using Library.Common.ViewModels;
@using Library.Common.Enums;
@model Library.Common.ViewModels.ListBooksViewModel;


@addTagHelper *, Library
@{
    ViewData["Title"] = "ListBooks";

}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script type="text/javascript">

    $(document).ready(function () {
        var lines = $(".text-Desc").height() / 20
        if (lines > 3) {
            $('.bookCard').removeClass('hidden');
            $('.bookCard').addClass('visible');
            $('.text-Desc').addClass('hiddenText');

        }


    });

</script>

<div class="opt-panel pt-3 pb-5">
    <div class="search">
        <form asp-controller="Library" asp-action="ListBooks" method="get">

            <label for="Name">Что искать</label>
            <input class="opt-input mr-2 ml-2" type="text" name="Name" style="width:40%" value="@Model.Search.Name" />
            <label for="Category">Категория</label>
            <select class="opt-input mr-2 ml-2" name="Category">

                @{

                    switch (Model.Search.Category)
                    {
                        case BookCategory.All:
                            <option selected value="0">Все</option>
                            <option value="1">Разработка</option>
                            <option value="2">Аналитика</option>
                            <option value="3">Тестирование</option>
                            <option value="4">Сопровождение</option>
                            <option value="5">Управление</option>
                            break;
                        case BookCategory.Analytics:
                            <option value="0">Все</option>
                            <option value="1">Разработка</option>
                            <option selected value="2">Аналитика</option>
                            <option value="3">Тестирование</option>
                            <option value="4">Сопровождение</option>
                            <option value="5">Управление</option>
                            break;
                        case BookCategory.Development:
                            <option value="0">Все</option>
                            <option selected value="1">Разработка</option>
                            <option value="2">Аналитика</option>
                            <option value="3">Тестирование</option>
                            <option value="4">Сопровождение</option>
                            <option value="5">Управление</option>
                            break;
                        case BookCategory.Maintenance:
                            <option value="0">Все</option>
                            <option value="1">Разработка</option>
                            <option value="2">Аналитика</option>
                            <option value="3">Тестирование</option>
                            <option selected value="4">Сопровождение</option>
                            <option value="5">Управление</option>
                            break;
                        case BookCategory.Management:
                            <option value="0">Все</option>
                            <option value="1">Разработка</option>
                            <option value="2">Аналитика</option>
                            <option value="3">Тестирование</option>
                            <option value="4">Сопровождение</option>
                            <option selected value="5">Управление</option>
                            break;
                        case BookCategory.Testing:
                            <option value="0">Все</option>
                            <option value="1">Разработка</option>
                            <option value="2">Аналитика</option>
                            <option selected value="3">Тестирование</option>
                            <option value="4">Сопровождение</option>
                            <option value="5">Управление</option>
                            break;

                    }

                }


            </select>
            <input class=" mr-2 ml-2 btn btn-primary btn-search" type="submit" name="Search" value="Найти" />
        </form>
    </div>
    <div class="ViewSelect ml-5" style="float:left;">
        <label for="View">Вид</label>
        <select class="opt-input mr-2 ml-2" name="View">
            <option value="0"></option>
            <option value="1"></option>
            <option value="2"></option>
        </select>
    </div>

</div>

<div class="container" style="min-height:750px;padding:0    ">
    <div class="flex">
        @for (int i = 0; i < Model.Books.ToArray().Length; i++)
        {
            BookViewModel book = Model.Books.ToArray()[i];

            <div class="flex-itm" style="@((i % 2 != 0) ? "margin-left:2%;":"") ">
                <div class="item">
                    <div class="img-item"><img style="border-radius: 5px;" width="100%" src="data:image/jpeg;base64,@(Convert.ToBase64String(book.CoverBytes))" /></div>
                    <div class="info-item">
                        <h6 class="info">@book.Title</h6>
                        <p class="info"><b class="info">Год </b>@book.YearOfPublication  <b class="info"> &ensp;|&ensp; Страниц </b>@book.CountPages</p>
                        <p class="info"><b class="info">Язык книги </b>@book.Language</p>
                        <p class="info"><b class="info">В наличии </b>@book.Count</p>
                        <p class="info-list">
                            <b class="info">Категории </b>&ensp;
                            @foreach (var category in book.Categories)
                            {
                                <u> @category</u><b>&ensp;</b>
                                <u> @category</u><b>&ensp;</b>
                                <u> @category</u><b>&ensp;</b>
                                <u> @category</u><b>&ensp;</b>
                            }
                        </p>
                        <p class="info-list" style="margin-bottom:auto">
                            <b class="info">Ключевые слова </b>&ensp;
                            @foreach (var keyword in book.KeyWordsName)
                            {
                                <u> @keyword</u><b>&ensp;</b>
                                <u> @keyword</u><b>&ensp;</b>
                                <u> @keyword</u><b>&ensp;</b>
                                <u> @keyword</u><b>&ensp;</b>


                            }
                        </p>
                        <form asp-controller="Library" asp-action="@((Model.HoldersList.Contains(book.Id))?"ReturnBook":"ReceivingBook")" method="post">
                            <input type="hidden" name="bookId" value="@book.Id.ToString()" />
                            <input type="hidden" name="url" value="@Context.Request.Scheme://@Context.Request.Host@Context.Request.Path@Context.Request.QueryString" />

                            @if (Model.HoldersList.Contains(book.Id))
                            {
                                <input type="submit" name="ReturngBook" class="btn btn-return btn-success" value="Отдать" />

                            }
                            else
                            {

                                <input type="submit" name="ReceivingBook" class="btn btn-take @((book.Count > 0) ?  "btn-success" : "btn-secondary")" @((book.Count > 0) ? "" : "disabled") value="Взять" />

                            }



                            <a class="btn @((book.URL != null) ? "":"btn-secondary disabled") btn-url" href="@book.URL">Читать онлайн</a>
                        </form>
                        @if (book.Count == 0)
                        {

                            <form asp-controller="Library" asp-action="CreateNotification" method="post" style="padding-top:1%;">
                                <input type="hidden" name="bookId" value="@book.Id" />
                                <input type="hidden" name="url" value="@Context.Request.Scheme://@Context.Request.Host@Context.Request.Path@Context.Request.QueryString" />
                                <input type="submit" name="CreateNotification" class="btn btn-notification @((Model.NotificationList.Contains(book.Id)) ? "btn-secondary" :  "btn-success")" @((Model.NotificationList.Contains(book.Id)) ? "disabled" :  "") value="Уведомить о наличии" />
                            </form>

                        }
                    </div>
                    <div class="Description"><p class="text-Desc" id="text-Desc">@book.Description</p><a id="bookCard" class="bookCard hidden" asp-action="BookCard" asp-controller="Library">Подробнее</a></div>
                </div>

            </div>

        }
    </div>

</div>
<div class="row pagination">
    <div class="col-md-12 text-center">
        @{ Html.RenderPartial("_Pagination", (Pagination)ViewBag.Pagination); }
    </div>
</div>

